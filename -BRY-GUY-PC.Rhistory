summary(m1 <- lm(P_Empower~ MLQ_Total * Condition, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition * MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(A_Trust~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(C_Trust~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(IJ~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(IJ~ I6 * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(IJ~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
MLQ$MLQ_Total <- MLQ[,2:7]%>% rowSums%>%as.factor(order = TRUE)
MLQ$MLQ_Total <- MLQ[,2:7]%>% rowSums%>%factor(order = TRUE)
summary(m1 <- lm(IJ~ MLQ_Total * Condition + MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(IJ~ MLQ_Total * Condition, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(IJ~ MLQ_Total * Condition * MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition * MSI, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition * MSI + avg_RT, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
summary(m1 <- lm(Liking~ MLQ_Total * Condition, MLQ))
cor.test(MLQ$avg_RT, MLQ$MLQ_Total)
MLQ$MLQ_Total <- MLQ[,2:7]%>% rowSums%>%as.factor()
summary(m1 <- lm(Collective_ID ~ Condition * MSI + Individual_ID , data = MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * Condition * MSI, MLQ))
library(lme4)
summary(m1 <- lmer(Liking~ MLQ_Total + (1|ID), MLQ))
MLQ$Session <- Data$Session
summary(m1 <- lmer(Liking~ MLQ_Total + (1|Session), MLQ))
summary(m1 <- lmer(Liking~ MLQ_Total + (0|Session), MLQ))
View(RT_data)
summary(m1 <- lm(Liking~ MLQ_Total * Condition * MSI, MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * MSI, MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * Condition, MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * Condition + MSI, MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * Condition, MLQ))
summary(m1 <- lm(Liking~ MLQ_Total * Condition + MSI, MLQ))
summary(m1 <- lm(A_Trust~ MLQ_Total * Condition + MSI, MLQ))
summary(m1 <- lm(C_Trust~ MLQ_Total * Condition + MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total * Condition + MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
anova(m1, m2)
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- lm(IJ~ MLQ_Total * Condition + MSI , MLQ))
anova(m1, m2)
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- lm(IJ~ MLQ_Total * Condition + MSI , MLQ))
anova(m2, m3)
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- lm(IJ~ MLQ_Total * Condition * MSI , MLQ))
anova(m2, m3)
#summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
#summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- glm(MLQ_Total~ Condition * MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- glm(MLQ_Total~ Condition * MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total * Condition , MLQ))
summary(m3 <- lm(MLQ_Total~ Condition + MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total + Condition , MLQ))
summary(m3 <- lm(MLQ_Total~ Condition + MSI, MLQ))
summary(m1 <- lm(IJ~ MLQ_Total, MLQ))
summary(m2 <- lm(IJ~ MLQ_Total  * Condition , MLQ))
summary(m3 <- lm(MLQ_Total~ Condition + MSI, MLQ))
library(polycor)
het.mat <- polycor::hetcor(data = as.data.frame(MLQ_items))$cor
library(polycor)
het.mat <- polycor::hetcor(data = as.data.frame(MLQ[,2:7))$cor
library(polycor)
het.mat <- polycor::hetcor(data = as.data.frame(MLQ[,2:7)$cor
library(polycor)
MLQ_items <- MLQ[,2:7]
het.mat <- polycor::hetcor(data = as.data.frame(MLQ_items))$cor
het.mat
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 2, n.obs = nrow(df.2), rotate = "varimax")
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 2, n.obs = nrow((data = as.data.frame(MLQ_items)), rotate = "varimax")
fa.2
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 2, n.obs = nrow((data = as.data.frame(MLQ_items)))), rotate = "varimax")
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 2, n.obs = nrow((data = as.data.frame(MLQ_items)), rotate = "varimax"))
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 1, n.obs = nrow((data = as.data.frame(MLQ_items)), rotate = "varimax"))
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 1, n.obs = nrow(data = as.data.frame(MLQ_items)), rotate = "varimax")
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 1, n.obs = nrow(data = MLQ_items), rotate = "varimax")
library(psych)
fa.1 <- factanal(covmat = het.mat, factors = 1, rotation = "varimax")
fa.1
library(psych)
fa.2 <- fa(r = het.mat, nfactors = 1, n.obs = nrow(MLQ_items), rotate = "varimax")
fa.2
crosby <- function(x) {
x <- recode(x, "1" = 1, "0" = 0)
}
setwd("C:/Users/bacto/OneDrive/Desktop/Programming/R/ARI_General")
library(tidyverse)
library(plyr)
#install.packages("DescTools")
#install.packages("ltm")
library(ltm)
library(DescTools)
library(apaTables)
Data <- as.tbl(read.csv("ARI_Study_2_Identity.csv"))
## Install from CRAN
install.packages('blogdown')
install.packages("Rtools")
blogdown::install_hugo()
getWwd()
getwd()
#######################################
data$Race <- factor(data$Race, ordered = FALSE)
x <- (c("googleLanguageR", "dplyr", "googleAuthR", "googleCloudStorageR"))
lapply(x, require, character.only = TRUE)
rm(x)
names <- c("Janey", "Bryan", "Karolina", "Richard")
random_names <- sample(names, 80, replace = TRUE)
write.csv(random_names, "random_names.csv")
getwd()
require(dynr)
data <- dynr.data(Oscillator, id="id", time="times", observed="y1")
look_data <- dynr::Oscillator
View(look_data)
meas <- prep.measurement(
values.load=matrix(c(1, 0), 1, 2),
params.load=matrix(c('fixed', 'fixed'), 1, 2),
state.names=c("Position","Velocity"),
obs.names=c("y1"))
ecov <- prep.noise(
values.latent=diag(c(0, 1), 2), params.latent=diag(c('fixed', 'dnoise'), 2),
values.observed=diag(1.5, 1), params.observed=diag('mnoise', 1))
dynamics <- prep.matrixDynamics(
values.dyn=matrix(c(0, -0.1, 1, -0.2), 2, 2),
params.dyn=matrix(c('fixed', 'spring', 'fixed', 'friction'), 2, 2),
isContinuousTime=TRUE)
initial <- prep.initial(
values.inistate=c(0, 1),
params.inistate=c('inipos', 'fixed'),
values.inicov=diag(1, 2),
params.inicov=diag('fixed', 2))
model <- dynr.model(dynamics=dynamics, measurement=meas, noise=ecov, initial=initial, data=data, outfile="LinearSDE.c")
install.packages("tools")
install.packages("tools")
printex(model,ParameterAs=model$param.names,show=FALSE,printInit=TRUE,
outFile="LinearSDE.tex")
tools::texi2pdf("LinearSDE.tex")
res <- dynr.cook(model)
demo('LinearSDE', package = 'dynr')
demo('LinearSDE', package = 'dynr')
getwd()
res <- dynr.cook(model, verbose = FALSE, infile = "LinearSDE.c")
vector <- c(10,11,12,13,14,15)
bs(vector, df = NULL, knots = NULL, degree = 3, intercept = FALSE,
Boundary.knots = range(x))
install.packages("splines")
install.packages("splines")
library(splines)
bs(vector, df = NULL, knots = NULL, degree = 3, intercept = FALSE,
Boundary.knots = range(x))
bs(vector, df = NULL, knots = NULL, degree = 3, intercept = FALSE,
Boundary.knots = range(vector))
bs(vector, df = NULL, knots = NULL, degree = 1, intercept = FALSE,
Boundary.knots = range(vector))
bs(vector, df = NULL, knots = NULL, degree = 1, intercept = FALSE,
Boundary.knots = range(vector))
vector <- c(10,11,NA,13,14,15)
bs(vector, df = NULL, knots = NULL, degree = 1, intercept = FALSE,
Boundary.knots = range(vector))
vector <- c(10,11,"NA",13,14,15)
bs(vector, df = NULL, knots = NULL, degree = 1, intercept = FALSE,
Boundary.knots = range(vector))
vector <- c(10,11,,13,14,15)
data <- rnorm(1, 0, 1)
bs(x, knots=c(-0.5, 0, 0.5), Boundary.knots=c(-4, 4), degree=3, intercept=T)
bs(data, knots=c(-0.5, 0, 0.5), Boundary.knots=c(-4, 4), degree=3, intercept=T)
x1 <- factor(sample(c('a','b','c'),1000,TRUE))
x2 <- (x1=='b') + 3*(x1=='c') + rnorm(1000,0,2)
x3 <- rnorm(1000)
y  <- x2 + 1*(x1=='c') + .2*x3 + rnorm(1000,0,2)
orig.x1 <- x1[1:250]
orig.x2 <- x2[251:350]
x1[1:250] <- NA
x2[251:350] <- NA
d <- data.frame(x1,x2,x3,y, stringsAsFactors=TRUE)
View(d)
f <- aregImpute(~y + x1 + x2 + x3, nk=c(0,3:5), tlinear=FALSE,
data=d, B=10)
install.packages("aregImpute")
install.packages("Hmisc")
library(Hmisc)
f <- aregImpute(~y + x1 + x2 + x3, nk=c(0,3:5), tlinear=FALSE,
data=d, B=10)
f
test <- f$resampacc
test$x1
test <- f$imputed
test$x1
View(d)
View(test)
f <- aregImpute(~x2, nk=3, tlinear=FALSE,
data=d,) #
f <- aregImpute(~x2, nk=3, tlinear=FALSE,
data=d, B=1) #
f <- aregImpute(~x2, nk=1, tlinear=FALSE,
data=d, B=1) #
f <- aregImpute(~x1, nk=c(3:5), tlinear=FALSE,
data=d, B=10) #
f <- aregImpute(~x1, nk=1, tlinear=FALSE,
data=d, B=10) #
f <- aregImpute(~x1, nk=1, tlinear=FALSE,
data=d, B=1) #
f <- aregImpute(~x1, nk=1, tlinear=TRUE,
data=d, B=1) #
f <- aregImpute(~x1, nk=1, tlinear=TRUE,
data=d$x1, B=1) #
f <- aregImpute(~x2, nk=1, tlinear=TRUE,
data=d, B=1) #
f <- aregImpute(~x2, nk=1, tlinear=TRUE,
data=d$x2, B=1) #
f <- aregImpute(~x2, nk=3, tlinear=TRUE,
data=d$x2, B=1) #
f <- aregImpute(~x2, nk=3, tlinear=TRUE,
data=d, B=1) #
f <- aregImpute(~x2, nk=3, tlinear=TRUE,
data=d$x2, B=1)
f <- aregImpute(~x1, nk=c(3), tlinear=FALSE,
data=d$x1, B=10) #
f <- aregImpute(~x1, nk=3, tlinear=FALSE,
data=d$x1, B=10) #
f <- aregImpute(~x2, nk=3, tlinear=FALSE,
data=d$x2, B=10) #
d <- data.frame(x1,x2,x3,y, stringsAsFactors=TRUE)
View(d)
getwd()
setwd("C:/Users/bacto/OneDrive/Documents")
LI <- read.csv("LI_data.csv")
LI$LI <- as.factor(LI$LI)
View(LI)
LI$time <- as.factor(LI$time)
LI$LI <- as.factor(LI$LI)
f <- aregImpute(~LI + time, nk=3, tlinear=FALSE,
data=LI, B=10) #
f <- aregImpute(~LI + time, nk=3, tlinear=FALSE,
data=LI, B=1)
f <- aregImpute(~LI + time, nk=3, tlinear=FALSE,
data=LI, B=0) #
LI$LI <- as.factor(LI$LI)
LI$time <- as.factor(LI$time)
LI <- read.csv("LI_data.csv")
LI$LI <- as.factor(LI$LI)
LI$time <- as.factor(LI$time)
LI <- read.csv("LI_data.csv")
LI$LI <- as.factor(LI$LI)
LI$time <- as.factor(LI$time)
LI$ID <- as.factor(LI$ID)
f <- aregImpute(~LI + time, nk=3, group = ID, tlinear=FALSE,
data=LI, B=0) #
f <- aregImpute(~LI + time, nk=3, group = "ID", tlinear=FALSE,
data=LI, B=0) #
f <- aregImpute(~LI + time, nk=3, group = LI$ID, tlinear=FALSE,
data=LI, B=0)
f <- aregImpute(~LI + time, nk=1, group = LI$ID, tlinear=FALSE,
data=LI) #
f <- aregImpute(~LI + time, nk=1, group = LI$ID,
data=LI) #
f <- aregImpute(~LI + time, nk=1, group = LI$ID,
data=LI) #
f <- aregImpute(~LI + time, nk=1, group = LI$ID,
data=LI) #
LI <- read.csv("LI_data.csv")
LI$LI <- as.factor(LI$LI)
LI$time <- as.factor(LI$time)
LI$ID <- as.factor(LI$ID)
f <- aregImpute(~LI + time, nk=1, group = LI$ID,
data=LI)
View(LI)
f <- aregImpute(LI~time, nk=1, group = LI$ID,
data=LI) #
f <- aregImpute(LI~time, nk=1,
data=LI)
LI <- read.csv("LI_data.csv")
LI$LI <- as.factor(LI$LI)
LI$time <- as.factor(LI$time)
LI$ID <- as.factor(LI$ID)
f <- aregImpute(LI~time, nk=1,
data=LI) #
LI <- read.csv("LI_data.csv")
f <- aregImpute(LI~time, nk=1,
data=LI) #
f <- aregImpute(LI~time, nk=3,
data=LI) #
test <- f$imputed
View(test)
test$LI
View(LI)
LI$time <- as.factor(LI$time)
LI$ID <- as.factor(LI$ID)
f <- aregImpute(LI~time, nk=3,
data=LI, group = time) #
f <- aregImpute(LI~time, nk=3,
data=LI, group = ID) #
f <- aregImpute(LI~time, nk=3,
data=LI, group = LI$ID) #
test <- f$imputed
test$LI
theDataList <- scan("test2.dat", list(id=0, day=0, mhi=0), skip=0)
library(lme4)
m1 <- lme4::lmer(LI~time + (1|ID), data = LI)
vignette("tibble")
tibble(x = letters)
library(tibble)
tibble(x = letters)
install.packages("tidyverse")
library(tibble)
tibble(x = letters)
devtools::install_github("tidyverse/tibble")
library(Rtools)
install.packages("Rtools")
install.packages("rtools")
devtools::install_github("tidyverse/tibble")
devtools::install_github("tidyverse/tibble")
devtools::install_github("tidyverse/tibble")
detach("package:tibble", unload=TRUE)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
install.packages("tibble")
devtools::install_github("tidyverse/tibble")
librart(tibble)
library(tibble)
tibble(x = letters)
a <- tibble(x = letters)
View(a)
vignette("tibble")
vignette("tibble")
a <- tibble(
'credit card name',
'account'
)
View(a)
a <- tibble(
'credit card name' = ,
'account' =
)
a <- tibble(
'credit card name' = NULL,
'account' = NULL
)
View(a)
a <- tibble(
'credit card name' = 0,
'account' = 0
)
View(a)
a <- tibble(
'credit card name' = c("American Express", "Chase"),
'account' = 0
)
View(a)
knitr::opts_chunk$set(echo = TRUE, fig.cap = TRUE)
library(officedown)
library(officer)
library(lme4)
library(sjPlot)
library(tidyverse)
library(insight)
fp <- fp_par(
text.align = "center",
padding.bottom = 20, padding.top = 120,
border.bottom = fp_border())
ft <- fp_text(shading.color='#EFEFEF', bold = TRUE)
dat <- read.csv("A2_Liking.csv")
dat <- dat%>% dplyr::mutate(across(c(ID, Condition, MSI, rating), factor))
m1 <- glmer(rating ~ Condition + MSI +
Liking + Liking:Condition + Liking:MSI +
(1 | ID),
family = binomial, data = dat)
View(dat)
mean(Liking)
mean(dat$Liking)
dat(dat$Liking)
mean(dat$Liking)
mean(dat$Liking, na.rm = T)
sd(dat$Liking, na.rm = T)
library(sjPlot)
plot_model(m1, type = "pred", terms = c("Liking", "Condition"))
plot_model(m1, type = "pred", terms = c("Liking", "Condition"))
plot_model(m1, type = "slope", terms = c("Liking", "Condition"))
plot_model(m1, type = "pred", terms = c("Liking", "Condition"))
plot_model(m1, type = "pred", terms = c("Liking", "Condition"), se = F)
plot_model(m1, type = "pred", terms = c("Liking", "Condition"), se = F, title = "Liking by Remember Manipulation Interaction")
plot_model(m1, type = "pred", terms = c("Liking", "Condition"), se = F, title = "Liking by Remember Manipulation Interaction", exponentiate = T)
a <- plot_model(m1, type = "pred", terms = c("Liking", "Condition"), se = F, title = "Liking by Remember Manipulation Interaction", exponentiate = T)
a + x_lab("Probability of rating yes on leadership item")
library(ggplot2)
a <- plot_model(m1, type = "pred", terms = c("Liking", "Condition"), se = F, title = "Liking by Remember Manipulation Interaction", exponentiate = T)
a + x_lab("Probability of rating yes on leadership item")
library(officedown)
knitr::opts_chunk$set(echo = TRUE, fig.cap = TRUE)
library(officedown)
library(officer)
fp <- fp_par(
text.align = "center",
padding.bottom = 20, padding.top = 120,
border.bottom = fp_border())
ft <- fp_text(shading.color='#EFEFEF', bold = TRUE)
knitr::opts_chunk$set(echo = TRUE, fig.cap = TRUE)
library(officedown)
library(officer)
CV %>% print_skill_bars()
install.packages("codebook")
library(codebook)
###This script is used to run the liking analyses
library(dplyr)
library(psych)
###This script is used to run the liking analyses
library(dplyr)
library(psych)
data <- read.csv("ML_data.csv")
citation("tidymodels")
setwd("C:/Users/bacto/OneDrive/Desktop/Programming/R/acton_website_updated_2")
blogdown::serve_site()
library(blogdown)
#blogdown::install_hugo()
#blogdown::new_site(theme = "apreshill/apero")
blogdown::build_site(local=TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::serve_site()
blogdown::stop_server()
setwd("C:/Users/bacto/OneDrive/Desktop/Programming/R/acton_website_updated_2/content/events")
setwd("C:/Users/bacto/OneDrive/Desktop/Programming/R")
setwd("C:/Users/bacto/OneDrive/Desktop/Programming/R/acton_website_updated_2")
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::build_site(local=TRUE)
blogdown::build_site(local=TRUE)
blogdown::build_site(local=TRUE)
blogdown::serve_site()
blogdown::build_site(local=TRUE)
blogdown::stop_server()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
install.packages("xfun")
blogdown::serve_site()
blogdown::build_site(local=TRUE)
